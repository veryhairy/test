类，类是抽象的，可以理解为是类型两个字的缩写，构建一个类的过程就是创建一个类型的过程。八种基本数据类型：byte short int long float double boolean char。
对象，对象是类的具体化，所有通过new关键字创建出来的对象，都是放在堆里的。还有属性的赋值：对象名.属性名=属性值
这就是一个赋值过程。属性初始化的顺序为：默认初始化，显示初始化，构造代码快初始化，构造方法初始化。生活中的信息等于类中的属性，生活中的动作等于类中的方法 对象名.方法名就是用这个对象，调用这个方法。方法的组成为：权限修饰符，返回值类型，方法名，参数列表，方法体。String类，表示字符串，字符串并不是基本数据类型，字符串是不可变的，当一个字符串被创建，它就不能再发生变化。权限修饰符：public protection private 。 private表示私有的，需要setget暴露出一个公共的方法去获得。
构造方法，可以在对象初始化时，给属性赋值。构造方法的两个特点为，方法名与类名相同，没有返回值功能，new xxx（）；就是一个构造方法，只不过是一个没有参数的构造方法，没有参数的构造方法简称为空参。
方法的重载：方法名相同，参数列表不同，与返回值和权限修饰符无关。
继承：关键字extends，只在类的声明时使用。子类可以继承父类的属性和方法
Java面对对象编程的三大特征为封装，继承，多态。子类继承父类的属性或方法，然后又定义了自己的属性或方法，这个过程叫扩展。
成员变量和局部变量：定义在类的{}中的属性叫成员变量或者成员属性，局部变量只在定义它的{}中有效，这个变量的有效范围，被称为变量的作用域
this可以调用本类的属性方法，super用来调用父类的方法
方法的重写：从父类继承来的方法，子类添加独有的行为，就是重写，重写就是复写
abstract关键字为：抽象的。 没有具体的对象，就是抽象。类，对象就是事物的抽象。abstract修饰的类，就是抽象类
抽象类的特点：不能直接通过new关键字创建该抽象类的对象，也就是说，抽象类不能new对象，有抽象方法的类，一定是抽象类，但是，并不是抽象类一定有抽象方法。没有方法体的方法就是抽象方法，抽象方法要用abstract关键字修饰
final关键字：表示最终。被final修饰的类，不可以被继承，被final修饰的方法，不可以被复写，被final修饰的变量，不可以被改变
static关键字：静态的
被static修饰的属性或方法，是类的，不是依赖于对象的。静态方法中不能使用非静态变量。静态的方法和属性可以理解为是共享的状态，每个对象操作的都是一个相同的属性或方法，注意是相同的 不是两个一模一样的相同，指的是在内存中，就存在一个。静态的属性或方法，可以使用类名直接调用
继承的好处，方便优化代码，提高扩展性。 继承的使用：父类的引用指向了子类的对象。所以可以将父类作为方法的形式参数，而将子类作为方法的实际参数。形参就是方法声明时参数列表中的参数，实参就是方法被调用时实际传入的内容。
接口：interface，Java中的接口表示一个规范或规则，不能直接创建对象，但可以使用接口的引用
父类的引用指向子类的对象，接口的引用指向了它实现类的对象，这就是多态。
父类的引用只能找到父类的方法，找不到子类独有的方法，所以就需要强制类型转换。使父类可以调用子类特有的方法属性。
如果一个对象没有名字，那么他叫匿名对象
Random工具类 nextInt（bound）接收的参数是一个左闭右开的区间【0,bound）
取两个数之间的随机数公式为：（最大值-最小值+1）外面再加上最小值
取一个随机的true或false：random.nextBoolean(); 类型转换异常成因：A类型的引用a，指向了它的子类B的对象，现在要把A类型的引用，转换成它的子类C类型的引用，这时候也就是C类型的引用指向了B类型的对象，所以就错了